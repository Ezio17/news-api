{"version":3,"sources":["details/Fetch.jsx","components/ModalAddNews.jsx","components/ModalEditNews.jsx","components/HomePageHeader.jsx","components/HomePage.jsx","components/Post.jsx","components/User.jsx","App.js","serviceWorker.js","redux/configureStore.jsx","index.js"],"names":["Fetch","url","fetch","then","response","json","ModalAddNews","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","valueTextArea","valueInput","handleChangeInput","bind","assertThisInitialized","handleChangeTextArea","event","setState","target","value","_this2","react_default","a","createElement","className","id","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","htmlFor","onChange","onClick","addNews","React","Component","ModalEditNews","body","handleClickOutside","e","title","document","addEventListener","removeEventListener","editNews","nextProps","prevState","connect","HomePageHeader","_ref","mostCommented","sortNewNews","newNews","popularNews","mostCommentedFunc","popularNewsText","Fragment","data-toggle","data-target","data-whatever","HomePage","editItem","isLoading","copyNews","toConsumableArray","items","sort","b","JSON","stringify","localStorage","setItem","changeNews","parse","getItem","viewer","item","i","length","objectSpread","newItems","setInput","userId","deletePost","newsWithoutPost","filter","copyItems","allId","push","Math","max","apply","concanNews","concat","console","log","getPost","news","_this$state","components_HomePageHeader","components_ModalAddNews","map","key","react_router_dom","to","components_ModalEditNews","dispatch","payload","Post","postComment","hidden","authorPost","hideComments","asyncToGenerator","regenerator_default","mark","_callee","comments","postId","wrap","_context","prev","next","sent","match","join","comment","stop","urlPostId","location","pathname","localStorageUsers","user","name","undefined","email","User","addressVisibility","companyVisibility","goBack","history","companyVisibilityInfo","addressVisibilityInfo","address","company","assign","addressInfo","companyInfo","username","phone","website","city","geo","lat","lng","street","suite","zipcode","catchPhrase","bs","App","store","es","basename","process","react_router","exact","path","component","Boolean","window","hostname","author","rootReducer","arguments","action","middleware","applyMiddleware","promise","thunk","logger","createStore","configureStore","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uUAKeA,EALD,SAACC,GACb,OAAOC,MAAMD,GACVE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,iBCiFhBC,cAhFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,cAAe,GACfC,WAAY,IAGdT,EAAKU,kBAAoBV,EAAKU,kBAAkBC,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAKa,qBAAuBb,EAAKa,qBAAqBF,KAA1BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KARXA,iFAWDc,GAChBX,KAAKY,SAAS,CAAEN,WAAYK,EAAME,OAAOC,qDAGtBH,GACnBX,KAAKY,SAAS,CAAEP,cAAeM,EAAME,OAAOC,yCAGrC,IAAAC,EAAAf,KACP,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,GAAG,eAAeC,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QACxHR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,KAAK,YACjCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcC,GAAG,qBAA/B,YACAJ,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,QAAQO,eAAa,QAAQC,aAAW,SACtEX,EAAAC,EAAAC,cAAA,QAAMM,cAAY,QAAlB,UAGJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,iBAAiBT,UAAU,kBAA1C,UACAH,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACLN,UAAU,eACVC,GAAG,iBACHN,MAAOd,KAAKI,MAAME,WAClBuB,SAAU7B,KAAKO,qBAGnBS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,eAAeT,UAAU,kBAAxC,YACAH,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACVC,GAAG,eACHN,MAAOd,KAAKI,MAAMC,cAClBwB,SAAU7B,KAAKU,0BAKvBM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,oBAAoBO,eAAa,SAAjE,SACAV,EAAAC,EAAAC,cAAA,UACEO,KAAK,SACLN,UAAU,kBACVO,eAAa,QACbI,QAAS,WAKP,OAJAf,EAAKH,SAAS,CACZN,WAAY,GACZD,cAAe,KAEVU,EAAKnB,MAAMmC,QAAQhB,EAAKX,MAAME,WAAYS,EAAKX,MAAMC,cAAe,YAT/E,0BA1DS2B,IAAMC,WCC3BC,cACJ,SAAAA,EAAYtC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACjBrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,cAAe,GACfC,WAAY,GACZ6B,KAAM,IAGRtC,EAAKU,kBAAoBV,EAAKU,kBAAkBC,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAKa,qBAAuBb,EAAKa,qBAAqBF,KAA1BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC5BA,EAAKuC,mBAAqBvC,EAAKuC,mBAAmB5B,KAAxBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAXTA,iFAcDc,GAChBX,KAAKY,SAAS,CAAEN,WAAYK,EAAME,OAAOC,qDAGtBH,GACnBX,KAAKY,SAAS,CAAEP,cAAeM,EAAME,OAAOC,mDAG3BuB,GACG,cAAhBA,EAAExB,OAAOO,IAIbpB,KAAKY,SAAS,CACZP,cAAeL,KAAKI,MAAMC,cAC1BC,WAAYN,KAAKI,MAAMkC,oDAmBzBC,SAASC,iBAAiB,YAAaxC,KAAKoC,mEAI5CG,SAASE,oBAAoB,YAAazC,KAAKoC,qDAGxC,IAAArB,EAAAf,KACP,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,GAAG,YAAYC,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QACrHR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,KAAK,YACjCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcC,GAAG,qBAA/B,aACAJ,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,QAAQO,eAAa,QAAQC,aAAW,SACtEX,EAAAC,EAAAC,cAAA,QAAMM,cAAY,QAAlB,UAGJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,iBAAiBT,UAAU,kBAA1C,UACAH,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACLN,UAAU,eACVC,GAAG,iBACHN,MAAOd,KAAKI,MAAME,WAClBuB,SAAU7B,KAAKO,qBAGnBS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,eAAeT,UAAU,kBAAxC,YACAH,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACVC,GAAG,eACHN,MAAOd,KAAKI,MAAMC,cAClBwB,SAAU7B,KAAKU,0BAKvBM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SACXN,UAAU,oBACVO,eAAa,QACbI,QAAS,kBAAMf,EAAKH,SAAS,CAC3BP,cAAeU,EAAKX,MAAM+B,KAC1B7B,WAAYS,EAAKX,MAAMkC,UAL3B,SAQAtB,EAAAC,EAAAC,cAAA,UACEO,KAAK,SACLN,UAAU,kBACVO,eAAa,QACbI,QAAS,WAKP,OAJAf,EAAKH,SAAS,CACZP,cAAeU,EAAKX,MAAM+B,KAC1B7B,WAAYS,EAAKX,MAAMkC,QAElBvB,EAAKnB,MAAM8C,SAAS3B,EAAKX,MAAME,WAAYS,EAAKX,MAAMC,iBATjE,sEAnEgBsC,EAAWC,GACzC,OAAID,EAAUR,OAASS,EAAUT,MAC5BQ,EAAUL,QAAUM,EAAUN,MAC1B,CACLjC,cAAesC,EAAUR,KACzB7B,WAAYqC,EAAUL,MACtBH,KAAMQ,EAAUR,KAChBG,MAAOK,EAAUL,OAGZ,YA5CeN,IAAMC,WAiInBY,cALS,SAACzC,GAAD,MAAY,CAClCkC,MAAOlC,EAAMkC,MACbH,KAAM/B,EAAM+B,OAGCU,CAAyBX,GChGzBY,EAlCQ,SAAAC,GAA8FA,EAA3FC,cAA2F,IAA5EC,EAA4EF,EAA5EE,YAAaC,EAA+DH,EAA/DG,QAA4BC,GAAmCJ,EAAtDK,kBAAsDL,EAAnCI,aAAaE,EAAsBN,EAAtBM,gBAE7F,OACErC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,SAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,uBACVW,QAASqB,GACTE,IAEJrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,uBACVW,QAASoB,GACTD,KAGNjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEO,KAAK,SACLN,UAAU,wEACVoC,cAAY,QACZC,cAAY,gBACZC,gBAAc,QALhB,eCfFC,cACJ,SAAAA,EAAY9D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IACjB7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX6C,YAAa,WACbD,cAAe,iBACfG,YAAa,eACbQ,SAAU,KACVC,WAAW,GAGb/D,EAAKqD,QAAU,WACb,IAAMW,EAAQ/D,OAAAgE,EAAA,EAAAhE,CAAOD,EAAKD,MAAMmE,OAC5Bd,EAAc,GAEa,aAA3BpD,EAAKO,MAAM6C,aACbY,EAASG,KAAK,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAC,GAASgD,EAAC,KACnChB,EAAc,YACsB,aAA3BpD,EAAKO,MAAM6C,cACpBY,EAASG,KAAK,SAAC/C,EAAGgD,GAAJ,OAAUA,EAAC,GAAShD,EAAC,KACnCgC,EAAc,YAGhBpD,EAAKe,SAAS,CACZqC,gBAGF,IAAIc,EAAQG,KAAKC,UAAUN,GAC3BO,aAAaC,QAAQ,OAAQN,GAE7BlE,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,WAGxD3E,EAAKsD,YAAc,WACjB,IAAMU,EAAQ/D,OAAAgE,EAAA,EAAAhE,CAAOD,EAAKD,MAAMmE,OAC5BZ,EAAc,GAEa,iBAA3BtD,EAAKO,MAAM+C,aACbU,EAASG,KAAK,SAAC/C,EAAGgD,GAAJ,OAAUA,EAAC,OAAahD,EAAC,SACvCkC,EAAc,kBACsB,mBAA3BtD,EAAKO,MAAM+C,cACpBU,EAASG,KAAK,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAC,OAAagD,EAAC,SACvCd,EAAc,gBAGhBtD,EAAKe,SAAS,CACZuC,gBAGF,IAAIY,EAAQG,KAAKC,UAAUN,GAC3BO,aAAaC,QAAQ,OAAQN,GAE7BlE,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,WAGxD3E,EAAK4E,OAAS,SAACC,GAEb,IAFsB,IAChBX,EAAUlE,EAAKD,MAAfmE,MACGY,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAChC,GAAIZ,EAAMY,GAAGvD,KAAOsD,EAAKtD,GAAI,CAC3B2C,EAAMY,GAAN7E,OAAA+E,EAAA,EAAA/E,CAAA,GACKiE,EAAMY,GADX,CAEEF,OAAQV,EAAMY,GAAGF,OAAS,IAG5B,IAAIK,EAAWZ,KAAKC,UAAUJ,GAC9BK,aAAaC,QAAQ,OAAQS,GAE7BjF,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,UACtD3E,EAAKD,MAAMmF,SAASL,EAAKM,UAK/BnF,EAAKoF,WAAa,SAAC7D,GACjB,IAAM8D,EAAkBrF,EAAKD,MAAMmE,MAAMoB,OAAO,SAAAT,GAAI,OAAIA,EAAKtD,MAAQA,IACjE2C,EAAQG,KAAKC,UAAUe,GAC3Bd,aAAaC,QAAQ,OAAQN,GAE7BlE,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,WAGxD3E,EAAKkC,QAAU,SAACO,EAAOH,EAAM6C,GAC3B,IAAII,EAAStF,OAAAgE,EAAA,EAAAhE,CAAOD,EAAKD,MAAMmE,OAC3BsB,EAAQ,GAEZ,GAAc,KAAV/C,GAGS,KAATH,EAAJ,CAIA,IAAK,IAAIwC,EAAI,EAAGA,EAAIS,EAAUR,OAAQD,IACpCU,EAAMC,KAAKF,EAAUT,GAAGvD,IAG1B,IACI8B,EAAU,CAAEZ,QAAOH,OAAM6C,SAAQ5D,GAD3BmE,KAAKC,IAAIC,MAAM,KAAMJ,GACgB,EAAGZ,OAAQ,GACtDiB,EAAU,GAAAC,OAAA7F,OAAAgE,EAAA,EAAAhE,CAAOD,EAAKD,MAAMmE,OAAlB,CAAyBb,IACnCa,EAAQG,KAAKC,UAAUuB,GAC3BtB,aAAaC,QAAQ,OAAQN,GAE7BlE,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,YAGxD3E,EAAK6C,SAAW,SAACJ,EAAOH,GAAS,IACvBwB,EAAa9D,EAAKO,MAAlBuD,SACAI,EAAUlE,EAAKD,MAAfmE,MAER,GAAIJ,EAASrB,QAAUA,GAASqB,EAASxB,OAASA,EAAlD,CAIc,KAAVG,IACFA,EAAQqB,EAASrB,OAEN,KAATH,IACFA,EAAOwB,EAASxB,MAElByD,QAAQC,IAAIlC,EAASrB,MAAO,aAAeA,GAE3C,IAAK,IAAIqC,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAChC,GAAIZ,EAAMY,GAAGvD,KAAOuC,EAASvC,GAAI,CAC/B2C,EAAMY,GAAN7E,OAAA+E,EAAA,EAAA/E,CAAA,GACKiE,EAAMY,GADX,CAEErC,QACAH,SAEF,IAAI2C,EAAWZ,KAAKC,UAAUJ,GAC9BK,aAAaC,QAAQ,OAAQS,GAC7BjF,EAAKD,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,aAK5D3E,EAAKiG,QAAU,SAACpB,GACd7E,EAAKe,SAAS,CACZ+C,SAAUe,KAzIG7E,0MA+IgC,OAA7CqE,KAAKK,MAAMH,aAAaI,QAAQ,gCAClCxE,KAAKJ,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,UAEtDxE,KAAKY,SAAS,CACZgD,WAAW,8CAKIvE,EAAM,sDAGzB,IAHM0G,SAEAtB,cAAasB,GACVpB,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACjCF,EAAOE,GAAGF,OAAS,EAGjBV,EAAQG,KAAKC,UAAUM,GAC3BL,aAAaC,QAAQ,OAAQN,GAE7B/D,KAAKJ,MAAM0E,WAAWJ,KAAKK,MAAMH,aAAaI,QAAQ,UAEtDxE,KAAKY,SAAS,CACZgD,WAAW,wIAIN,IAAA7C,EAAAf,KAAAgG,EACwDhG,KAAKI,MAA5D6C,EADD+C,EACC/C,YAAaD,EADdgD,EACchD,cAAeG,EAD7B6C,EAC6B7C,YAAaS,EAD1CoC,EAC0CpC,UACzCG,EAAU/D,KAAKJ,MAAfmE,MAER,OACEH,EACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,yBAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+E,EAAD,CACEhD,YAAaA,EACbD,cAAeA,EACfK,gBAAiBF,EACjBD,QAASlD,KAAKkD,QACdC,YAAanD,KAAKmD,YAClBC,kBAAmBpD,KAAKgD,gBAE1BhC,EAAAC,EAAAC,cAACgF,EAAD,CAAcnE,QAAS/B,KAAK+B,UAC3BgC,EAAMoC,IAAI,SAAAzB,GAAI,OACb1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gFACbiF,IAAK1B,EAAKtD,IACVJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BuD,EAAKpC,OAC7CtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAauD,EAAKvC,MAC/BnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,GAAI,YAAAX,OAAcjB,EAAKtD,IACvBU,QAAS,kBAAMf,EAAK0D,OAAOC,KAE3B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAAb,iBAEFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,UAA4CuD,EAAKD,UAGrDzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,oBACVoC,cAAY,QACZC,cAAY,aACZC,gBAAc,OACd3B,QAAS,kBAAMf,EAAK+E,QAAQpB,KAL9B,aAOA1D,EAAAC,EAAAC,cAAA,KACEC,UAAU,oBACVW,QAAS,kBAAMf,EAAKkE,WAAL,GAAAU,OAAmBjB,EAAKtD,OAFzC,oBAORJ,EAAAC,EAAAC,cAACqF,EAAD,CAAe7D,SAAU1C,KAAK0C,oBA/NnBV,IAAMC,WAqPdY,cAfS,SAACzC,GAAD,MAAY,CAClC2D,MAAO3D,EAAM2F,OAGY,SAAAS,GACzB,MAAO,CACLlC,WADK,SACMyB,GACTS,EAAS,CAAE/E,KAAM,cAAegF,QAASV,KAE3ChB,SAJK,SAIIC,GACPwB,EAAS,CAAE/E,KAAM,YAAagF,QAAS,CAAEzB,eAKhCnC,CAA6Ca,GCvK7CgD,cAjFb,SAAAA,EAAY9G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IACjB7G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXuG,YAAa,GACbC,QAAQ,EACRC,WAAY,GACZd,KAAM,IAGRlG,EAAKiH,aAALhH,OAAAiH,EAAA,EAAAjH,CAAAkH,EAAA/F,EAAAgG,KAAoB,SAAAC,IAAA,IAAAC,EAAAC,EAAAT,EAAA,OAAAK,EAAA/F,EAAAoG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKnI,EAAM,mDADX,OACZ8H,EADYG,EAAAG,KAGZL,EAASvH,EAAKD,MAAM8H,MAAMpI,IAAIoI,MAAM,QAAQC,KAAK,IACjDhB,EAAcQ,EAAShC,OAAO,SAAAyC,GAAO,OAAIA,EAAQR,UAAYA,IAEnEvH,EAAKe,SAAS,SAAAgC,GAAS,MAAK,CAC1BgE,QAAShE,EAAUgE,OACnBD,iBARgB,wBAAAW,EAAAO,SAAAX,MAVHrH,8MAwBXiI,EAAY9H,KAAKJ,MAAMmI,SAASC,SAASN,MAAM,QAAQC,KAAK,IAC5DM,EAAoB/D,KAAKK,MAAMH,aAAaI,QAAQ,SACpD0D,EAAOD,EAAkB9C,OAAO,SAAA+C,GAAI,OAAIA,EAAK9G,MAAQ0G,aAClCzI,EAAM,8CAAgD6I,EAAK,GAAGlD,eAAjF6B,SAEN7G,KAAKY,SAAS,CACZiG,WAAYA,EAAWsB,KACvBpC,KAAMmC,EAAK,wIAIN,IAAAlC,EAC2ChG,KAAKI,MAA/CuG,EADDX,EACCW,YAAaC,EADdZ,EACcY,OAAQC,EADtBb,EACsBa,WAAYd,EADlCC,EACkCD,KAEzC,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,KACPtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,cAGJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAd,eACgBiH,IAAfvB,EAA2B,UACxB7F,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAE,UAAAX,OAAYI,EAAKf,QAAU7D,UAAU,cAA7C,IAA4D0F,EAA5D,MAGJ7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe4E,EAAKzD,OAClCtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAe4E,EAAK5D,MACjCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,gBACVW,QAAS9B,KAAK8G,cACdF,EAAS,gBAAkB,sBAKrC5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWyF,EAAS,aAAe,8BACrCD,EAAYR,IAAI,SAAAyB,GAAO,OACtB5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDAAqDiF,IAAKwB,EAAQxG,IAC/EJ,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAI,aAAAX,OAAeiC,EAAQxG,KAC/BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2ByG,EAAQS,MAAlD,MAEFrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcyG,EAAQO,MACpCnH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAayG,EAAQzF,mBAzE/BH,IAAMC,WC+FVqG,cA9Fb,SAAAA,EAAY1I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IACjBzI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwI,GAAAnI,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX8H,KAAM,GACNK,mBAAmB,EACnBC,mBAAmB,GAGrB3I,EAAK4I,OAAS,WACZ5I,EAAKD,MAAM8I,QAAQD,UAGrB5I,EAAK8I,sBAAwB,WAC3B9I,EAAKe,SAAS,SAAAgC,GAAS,MAAK,CAC1B4F,mBAAoB5F,EAAU4F,sBAIlC3I,EAAK+I,sBAAwB,WAC3B/I,EAAKe,SAAS,SAAAgC,GAAS,MAAK,CAC1B2F,mBAAoB3F,EAAU2F,sBArBjB1I,iNA2BER,EAAM,uCAAyCW,KAAKJ,MAAM8H,MAAMpI,YAA7E4I,SAENlI,KAAKY,SAAS,CACZsH,4IAIK,IAAAlC,EACgDhG,KAAKI,MAApD8H,EADDlC,EACCkC,KAAMK,EADPvC,EACOuC,kBAAmBC,EAD1BxC,EAC0BwC,kBAE7BK,EAAU,GACVC,EAAU,GACdhJ,OAAOiJ,OAAOF,EAASX,EAAKW,SAC5B/I,OAAOiJ,OAAOD,EAASZ,EAAKY,SAE5B,IAAME,EAAcT,EAAoB,kBAAoB,yBACtDU,EAAcT,EAAoB,kBAAoB,yBAE5D,YACgBJ,IAAdF,EAAKC,KACHnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,8CAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,IAAInF,UAAU,eACrBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,gBAEFH,EAAAC,EAAAC,cAAA,MACEC,UAAU,yBACVW,QAAS9B,KAAKyI,QAFhB,SAMFzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,SAAuC+G,EAAKC,MAC5CnH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,cAA4C+G,EAAKgB,UACjDlI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC+G,EAAKG,OAC7CrH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC+G,EAAKiB,OAC7CnI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAA2C+G,EAAKkB,SAChDpI,EAAAC,EAAAC,cAAA,MACEC,UAAU,0BACVW,QAAS9B,KAAK4I,uBAFhB,gBAIA5H,EAAAC,EAAAC,cAAA,MAAIC,UAAW6H,GAAf,SAAmCH,EAAQQ,MAC3CrI,EAAAC,EAAAC,cAAA,MAAIC,UAAW6H,GAAf,YAAsCH,EAAQS,IAAIC,IAAlD,SAA6DV,EAAQS,IAAIE,IAAzE,KACAxI,EAAAC,EAAAC,cAAA,MAAIC,UAAW6H,GAAf,WAAqCH,EAAQY,QAC7CzI,EAAAC,EAAAC,cAAA,MAAIC,UAAW6H,GAAf,UAAoCH,EAAQa,OAC5C1I,EAAAC,EAAAC,cAAA,MAAIC,UAAW6H,GAAf,YAAsCH,EAAQc,SAC9C3I,EAAAC,EAAAC,cAAA,MACEC,UAAU,0BACVW,QAAS9B,KAAK2I,uBAFhB,gBAIA3H,EAAAC,EAAAC,cAAA,MAAIC,UAAW8H,GAAf,SAAmCH,EAAQX,MAC3CnH,EAAAC,EAAAC,cAAA,MAAIC,UAAW8H,GAAf,iBAA2CH,EAAQc,aACnD5I,EAAAC,EAAAC,cAAA,MAAIC,UAAW8H,GAAf,OAAiCH,EAAQe,eAtFtC7H,IAAMC,WCkBV6H,EAdH,SAAA/G,GAAe,IAAZgH,EAAYhH,EAAZgH,MACb,OACE/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAUD,MAAOA,GACf/I,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAe4D,SAAUC,mBACvBlJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW5D,IAC1C1F,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWhC,IAC1CtH,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5G,QCJvB6G,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAAS/C,MACvB,wGCbF3D,EAAQ,CACVgC,KAAM,GACNzD,MAAO,GACPH,KAAM,GACNuI,OAAQ,IAGJC,EAAc,WAA2B,IAA1BvK,EAA0BwK,UAAAhG,OAAA,QAAAwD,IAAAwC,UAAA,GAAAA,UAAA,GAAlB7G,EAAO8G,EAAWD,UAAAhG,OAAA,EAAAgG,UAAA,QAAAxC,EAC7C,OAAQyC,EAAOpJ,MAEb,IAAK,cACH,OAAO3B,OAAA+E,EAAA,EAAA/E,CAAA,GACFM,EADL,CAEE2F,KAAM8E,EAAOpE,UAGjB,IAAK,YACH,OAAO3G,OAAA+E,EAAA,EAAA/E,CAAA,GACFM,EADL,CAEEkC,MAAOuI,EAAOpE,QAAQnE,MACtBH,KAAM0I,EAAOpE,QAAQtE,KACrB6C,OAAQ6F,EAAOpE,QAAQzB,SAI3B,QACE,OAAO5E,IAIP0K,EAAaC,YAAgBC,IAASC,IAAOC,KC5B7CnB,ED6BiB,WAMrB,OALcoB,YACZR,EACAG,GChCUM,GAEdC,IAASC,OAAOtK,EAAAC,EAAAC,cAACqK,EAAD,CAAKxB,MAAOA,IAAWxH,SAASiJ,eAAe,SFwHzD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnM,KAAK,SAAAoM,GACjCA,EAAaC","file":"static/js/main.70d85308.chunk.js","sourcesContent":["const Fetch = (url) => {\r\n  return fetch(url)\r\n    .then(response => response.json())\r\n};\r\n\r\nexport default Fetch","import React from 'react'\r\n\r\nclass ModalAddNews extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      valueTextArea: '',\r\n      valueInput: '',\r\n    };\r\n\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleChangeTextArea = this.handleChangeTextArea.bind(this);\r\n  }\r\n\r\n  handleChangeInput(event) {\r\n    this.setState({ valueInput: event.target.value });\r\n  }\r\n\r\n  handleChangeTextArea(event) {\r\n    this.setState({ valueTextArea: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" >\r\n        <div className=\"row\">\r\n          <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">New news</h5>\r\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"recipient-name\" className=\"col-form-label\">Title:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"recipient-name\"\r\n                        value={this.state.valueInput}\r\n                        onChange={this.handleChangeInput}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"message-text\" className=\"col-form-label\">Message:</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"message-text\"\r\n                        value={this.state.valueTextArea}\r\n                        onChange={this.handleChangeTextArea}\r\n                      ></textarea>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        valueInput: '',\r\n                        valueTextArea: '',\r\n                      })\r\n                      return this.props.addNews(this.state.valueInput, this.state.valueTextArea, 'anonym');\r\n                    }\r\n                    }\r\n                  >Send news</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalAddNews\r\n\r\n//this.state.valueInput, this.state.valueTextArea, 'anonym', 104","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nclass ModalEditNews extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      valueTextArea: '',\r\n      valueInput: '',\r\n      body: '',\r\n    };\r\n\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleChangeTextArea = this.handleChangeTextArea.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  handleChangeInput(event) {\r\n    this.setState({ valueInput: event.target.value });\r\n  }\r\n\r\n  handleChangeTextArea(event) {\r\n    this.setState({ valueTextArea: event.target.value });\r\n  }\r\n\r\n  handleClickOutside(e) {\r\n    if (e.target.id !== 'ModalEdit') {\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      valueTextArea: this.state.valueTextArea,\r\n      valueInput: this.state.title,\r\n    })\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.body !== prevState.body\r\n      || nextProps.title !== prevState.title) {\r\n      return {\r\n        valueTextArea: nextProps.body,\r\n        valueInput: nextProps.title,\r\n        body: nextProps.body,\r\n        title: nextProps.title,\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" >\r\n        <div className=\"row\">\r\n          <div className=\"modal fade\" id=\"ModalEdit\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit news</h5>\r\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"recipient-name\" className=\"col-form-label\">Title:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"recipient-name\"\r\n                        value={this.state.valueInput}\r\n                        onChange={this.handleChangeInput}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"message-text\" className=\"col-form-label\">Message:</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"message-text\"\r\n                        value={this.state.valueTextArea}\r\n                        onChange={this.handleChangeTextArea}\r\n                      ></textarea>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.setState({\r\n                      valueTextArea: this.state.body,\r\n                      valueInput: this.state.title,\r\n                    })}\r\n                  >Close</button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        valueTextArea: this.state.body,\r\n                        valueInput: this.state.title,\r\n                      })\r\n                      return this.props.editNews(this.state.valueInput, this.state.valueTextArea);\r\n                    }\r\n                    }\r\n                  >Edit news</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  title: state.title,\r\n  body: state.body,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalEditNews);\r\n","import React from 'react'\r\n\r\nconst HomePageHeader = ({ mostCommented, sortNewNews, newNews, mostCommentedFunc, popularNews, popularNewsText }) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 text-center title\">\r\n        <h1 className=\"title_news\">News</h1>\r\n      </div>\r\n      <ul className=\"nav justify-content-center col-12\">\r\n        <li className=\"nav-item\">\r\n          <p\r\n            className=\"nav-link sortedItems\"\r\n            onClick={popularNews}\r\n          >{popularNewsText}</p>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <p\r\n            className=\"nav-link sortedItems\"\r\n            onClick={newNews}\r\n          >{sortNewNews}</p>\r\n        </li>\r\n      </ul>\r\n      <div className=\"col-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary offset-4 col-4 offset-md-5 col-md-2 btn btn-primary\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#exampleModal\"\r\n          data-whatever=\"@mdo\"\r\n        >Add news</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePageHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Fetch from '../details/Fetch'\r\nimport ModalAddNews from './ModalAddNews'\r\nimport ModalEditNews from './ModalEditNews'\r\nimport HomePageHeader from './HomePageHeader'\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      sortNewNews: 'New news',\r\n      mostCommented: 'Most commented',\r\n      popularNews: 'Popular news',\r\n      editItem: null,\r\n      isLoading: true,\r\n    }\r\n\r\n    this.newNews = () => {\r\n      const copyNews = [...this.props.items];\r\n      let sortNewNews = '';\r\n\r\n      if (this.state.sortNewNews === 'Old news') {\r\n        copyNews.sort((a, b) => a['id'] - b['id']);\r\n        sortNewNews = 'New news'\r\n      } else if (this.state.sortNewNews === 'New news') {\r\n        copyNews.sort((a, b) => b['id'] - a['id']);\r\n        sortNewNews = 'Old news'\r\n      }\r\n\r\n      this.setState({\r\n        sortNewNews,\r\n      })\r\n\r\n      let items = JSON.stringify(copyNews);\r\n      localStorage.setItem('news', items)\r\n\r\n      this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n    }\r\n\r\n    this.popularNews = () => {\r\n      const copyNews = [...this.props.items];\r\n      let popularNews = '';\r\n\r\n      if (this.state.popularNews === 'Popular news') {\r\n        copyNews.sort((a, b) => b['viewer'] - a['viewer']);\r\n        popularNews = 'Unpopular news'\r\n      } else if (this.state.popularNews === 'Unpopular news') {\r\n        copyNews.sort((a, b) => a['viewer'] - b['viewer']);\r\n        popularNews = 'Popular news'\r\n      }\r\n\r\n      this.setState({\r\n        popularNews,\r\n      })\r\n\r\n      let items = JSON.stringify(copyNews);\r\n      localStorage.setItem('news', items)\r\n\r\n      this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n    }\r\n\r\n    this.viewer = (item) => {\r\n      let { items } = this.props\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].id === item.id) {\r\n          items[i] = {\r\n            ...items[i],\r\n            viewer: items[i].viewer + 1\r\n          }\r\n\r\n          let newItems = JSON.stringify(items);\r\n          localStorage.setItem('news', newItems)\r\n\r\n          this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n          this.props.setInput(item.userId)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.deletePost = (id) => {\r\n      const newsWithoutPost = this.props.items.filter(item => item.id !== +id)\r\n      let items = JSON.stringify(newsWithoutPost);\r\n      localStorage.setItem('news', items)\r\n\r\n      this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n    }\r\n\r\n    this.addNews = (title, body, userId) => {\r\n      let copyItems = [...this.props.items]\r\n      let allId = [];\r\n\r\n      if (title === '') {\r\n        return;\r\n      }\r\n      if (body === '') {\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < copyItems.length; i++) {\r\n        allId.push(copyItems[i].id)\r\n      }\r\n\r\n      let max = Math.max.apply(null, allId)\r\n      let newNews = { title, body, userId, id: max + 1, viewer: 0 }\r\n      let concanNews = [...this.props.items, newNews];\r\n      let items = JSON.stringify(concanNews);\r\n      localStorage.setItem('news', items)\r\n\r\n      this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n    }\r\n\r\n    this.editNews = (title, body) => {\r\n      const { editItem } = this.state\r\n      const { items } = this.props\r\n\r\n      if (editItem.title === title && editItem.body === body) {\r\n        return\r\n      }\r\n\r\n      if (title === '') {\r\n        title = editItem.title;\r\n      }\r\n      if (body === '') {\r\n        body = editItem.body\r\n      }\r\n      console.log(editItem.title, '==========' + title)\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].id === editItem.id) {\r\n          items[i] = {\r\n            ...items[i],\r\n            title,\r\n            body\r\n          }\r\n          let newItems = JSON.stringify(items);\r\n          localStorage.setItem('news', newItems)\r\n          this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n        }\r\n      }\r\n    }\r\n\r\n    this.getPost = (item) => {\r\n      this.setState({\r\n        editItem: item,\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (JSON.parse(localStorage.getItem(\"news\")) !== null) {\r\n      this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n      })\r\n      return\r\n    }\r\n\r\n    const news = await Fetch('https://jsonplaceholder.typicode.com/posts/')\r\n\r\n    const viewer = [...news]\r\n    for (let i = 0; i < viewer.length; i++) {\r\n      viewer[i].viewer = 0;\r\n    }\r\n\r\n    let items = JSON.stringify(viewer);\r\n    localStorage.setItem('news', items)\r\n\r\n    this.props.changeNews(JSON.parse(localStorage.getItem(\"news\")))\r\n\r\n    this.setState({\r\n      isLoading: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { sortNewNews, mostCommented, popularNews, isLoading } = this.state\r\n    const { items } = this.props\r\n\r\n    return (\r\n      isLoading ?\r\n        <div className=\"Loader\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n        :\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <HomePageHeader\r\n              sortNewNews={sortNewNews}\r\n              mostCommented={mostCommented}\r\n              popularNewsText={popularNews}\r\n              newNews={this.newNews}\r\n              popularNews={this.popularNews}\r\n              mostCommentedFunc={this.mostCommented}\r\n            />\r\n            <ModalAddNews addNews={this.addNews} />\r\n            {items.map(item =>\r\n              <div className=\"offset-2 com-8 col-md-6 offset-md-0 col-lg-4 box block justify-content-center\"\r\n                key={item.id}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">{item.title}</h5>\r\n                    <p className=\"card-text\">{item.body}</p>\r\n                    <div>\r\n                      <Link\r\n                        to={'posts/' + `${item.id}`}\r\n                        onClick={() => this.viewer(item)}\r\n                      >\r\n                        <p className=\"btn btn-primary block_views\">Read more...</p >\r\n                      </Link>\r\n                      <p className=\"block_views offset-2\">Views: {item.viewer}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row justify-content-center\" >\r\n                    <p\r\n                      className=\"additional w-auto\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#ModalEdit\"\r\n                      data-whatever=\"@mdo\"\r\n                      onClick={() => this.getPost(item)}\r\n                    >Edit news</p>\r\n                    <p\r\n                      className=\"additional w-auto\"\r\n                      onClick={() => this.deletePost(`${item.id}`)}\r\n                    >Delete news</p>\r\n                  </div>\r\n                </div>\r\n              </div>)}\r\n            <ModalEditNews editNews={this.editNews} />\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.news,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeNews(news) {\r\n      dispatch({ type: 'CHANGE_NEWS', payload: news })\r\n    },\r\n    setInput(userId) {\r\n      dispatch({ type: 'SET_INPUT', payload: { userId } })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../details/Fetch'\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      postComment: [],\r\n      hidden: true,\r\n      authorPost: '',\r\n      news: '',\r\n    }\r\n\r\n    this.hideComments = async () => {\r\n      const comments = await Fetch(' https://jsonplaceholder.typicode.com/comments/')\r\n\r\n      const postId = this.props.match.url.match(/\\d+/g).join('');\r\n      const postComment = comments.filter(comment => comment.postId === +postId)\r\n\r\n      this.setState(prevState => ({\r\n        hidden: !prevState.hidden,\r\n        postComment,\r\n      }));\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const urlPostId = this.props.location.pathname.match(/\\d+/g).join('')\r\n    const localStorageUsers = JSON.parse(localStorage.getItem(\"news\"))\r\n    const user = localStorageUsers.filter(user => user.id === +urlPostId)\r\n    const authorPost = await Fetch('https://jsonplaceholder.typicode.com/users/' + user[0].userId)\r\n\r\n    this.setState({\r\n      authorPost: authorPost.name,\r\n      news: user[0]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { postComment, hidden, authorPost, news } = this.state\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center back\">\r\n            <Link to=\"/\">\r\n              <h1 className=\"back\">All news</h1>\r\n            </Link>\r\n          </div>\r\n          <h1 className=\"col-12 text-center post__title\">Author:\r\n          {authorPost === undefined ? ' Anonym' :\r\n              <Link to={`/users/${news.userId}`} className=\"authorPost\"> {authorPost} </Link>\r\n            }</h1>\r\n\r\n          <div className=\"card col-12 col-md-8 post\">\r\n            <div className=\"card-body\">\r\n              <h3 className=\"text-center\">{news.title}</h3>\r\n              <p className=\"text-center\">{news.body}</p>\r\n              <div className=\"post__block-comment\">\r\n                <p\r\n                  className=\"post__comment\"\r\n                  onClick={this.hideComments}\r\n                >{hidden ? 'Open comments' : 'Close comments'}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={hidden ? 'row hidden' : 'row justify-content-center'}>\r\n          {postComment.map(comment =>\r\n            <div className=\"card border-dark col-12 col-md-6 col-lg-4 col-xl-3\" key={comment.id}>\r\n              <Link to={'/users/' + `${comment.id}`}>\r\n                <div className=\"card-header text-center\">{comment.email} </div>\r\n              </Link>\r\n              <div className=\"card-body text-dark\">\r\n                <h5 className=\"card-title\">{comment.name}</h5>\r\n                <p className=\"card-text\">{comment.body}</p>\r\n              </div>\r\n            </div>)}\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../details/Fetch'\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      user: {},\r\n      addressVisibility: false,\r\n      companyVisibility: false,\r\n    }\r\n\r\n    this.goBack = () => {\r\n      this.props.history.goBack();\r\n    }\r\n\r\n    this.companyVisibilityInfo = () => {\r\n      this.setState(prevState => ({\r\n        companyVisibility: !prevState.companyVisibility,\r\n      }));\r\n    }\r\n\r\n    this.addressVisibilityInfo = () => {\r\n      this.setState(prevState => ({\r\n        addressVisibility: !prevState.addressVisibility,\r\n      }));\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await Fetch('https://jsonplaceholder.typicode.com' + this.props.match.url)\r\n\r\n    this.setState({\r\n      user,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user, addressVisibility, companyVisibility } = this.state\r\n\r\n    let address = {};\r\n    let company = {};\r\n    Object.assign(address, user.address);\r\n    Object.assign(company, user.company);\r\n\r\n    const addressInfo = addressVisibility ? 'list-group-item' : 'list-group-item hidden'\r\n    const companyInfo = companyVisibility ? 'list-group-item' : 'list-group-item hidden'\r\n\r\n    return (\r\n      user.name === undefined ?\r\n        <div className=\"bg-color\">\r\n          <h1 className=\"no-info\">We haven't information about this user :(</h1>\r\n        </div>\r\n        :\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 text-center back\">\r\n              <Link to=\"/\" className=\"text-center\">\r\n                <h1 className=\"back__text\">All news / </h1>\r\n              </Link>\r\n              <h1\r\n                className=\"back__text text-center\"\r\n                onClick={this.goBack}\r\n              >Back\r\n                </h1>\r\n            </div>\r\n            <div className=\"offset-md-3 col-md-6\">\r\n              <ul className=\"list-group  text-center\">\r\n                <li className=\"list-group-item\">Name: {user.name}</li>\r\n                <li className=\"list-group-item\">User name: {user.username}</li>\r\n                <li className=\"list-group-item\">Email: {user.email}</li>\r\n                <li className=\"list-group-item\">Phone: {user.phone}</li>\r\n                <li className=\"list-group-item\" >Website: {user.website}</li>\r\n                <li\r\n                  className=\"list-group-item pointer\"\r\n                  onClick={this.addressVisibilityInfo}\r\n                >Address info</li>\r\n                <li className={addressInfo}>City: {address.city}</li>\r\n                <li className={addressInfo}>Geo: lat {address.geo.lat}, lng {address.geo.lng} </li>\r\n                <li className={addressInfo}>Street: {address.street}</li>\r\n                <li className={addressInfo}>Suite: {address.suite}</li>\r\n                <li className={addressInfo}>Zipcode: {address.zipcode}</li>\r\n                <li\r\n                  className=\"list-group-item pointer\"\r\n                  onClick={this.companyVisibilityInfo}\r\n                >Company info</li>\r\n                <li className={companyInfo}>Name: {company.name}</li>\r\n                <li className={companyInfo}>Catch Phrase: {company.catchPhrase}</li>\r\n                <li className={companyInfo}>Bs: {company.bs}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\nimport HomePage from './components/HomePage'\nimport Post from './components/Post'\nimport User from './components/User'\n\nconst App = ({ store }) => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/posts/:id\" component={Post} />\n          <Route exact path=\"/users/:id\" component={User} />\n          <Route exact path=\"/\" component={HomePage} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport promise from 'redux-promise-middleware'\r\n\r\nlet items = {\r\n  news: [],\r\n  title: '',\r\n  body: '',\r\n  author: '',\r\n}\r\n\r\nconst rootReducer = (state = items, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'CHANGE_NEWS':\r\n      return {\r\n        ...state,\r\n        news: action.payload,\r\n      }\r\n\r\n    case 'SET_INPUT': {\r\n      return {\r\n        ...state,\r\n        title: action.payload.title,\r\n        body: action.payload.body,\r\n        userId: action.payload.userId\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst middleware = applyMiddleware(promise, thunk, logger)\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    middleware,\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}